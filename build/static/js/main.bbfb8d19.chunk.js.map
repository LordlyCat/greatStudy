{"version":3,"sources":["ajax.js","serviceWorker.js","indexPage/home.js","choose/choose.js","index.js"],"names":["module","exports","opts","defaults","method","url","data","async","cache","contentType","headers","Content-type","success","error","key","str","substring","length","toUpperCase","Date","getTime","oXhr","XMLHttpRequest","open","Object","keys","forEach","setRequestHeader","send","onreadystatechange","readyState","status","call","responseText","Boolean","window","location","hostname","match","Home","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","state","_this2","ajax","bind","setState","err","console","log","react_default","a","createElement","className","home_Btn","name","class","Component","Btn","_this3","props","onClick","localStorage","setItem","hash","aa","Choose","coverStyle","display","systemName","getItem","setCoverStyle","assertThisInitialized","id","choose_DropBox","classname","choose_NextBtn","choose_BulletBox","style","DropBox","showList","height","selected","moveFlag","zIndex","touchStartTime","show","touchStart","setSelected","parse","setTimeout","dataLength","value","showContent","choose_SelectInput","childSelect","onTouchEnd","onTouchStart","SelectInput","backgroundColor","_this4","valueArr","map","index","choose_ValueBox","ValueBox","_this5","e","background","NextBtn","BulletBox","_this6","age","job","getName","getAge","getJob","submitData","target","type","onChange","ReactDOM","render","HashRouter","basename","Switch","Route","exact","path","component","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.bbfb8d19.chunk.js","sourcesContent":["function ajax(opts) {\n\n    var defaults = {\n        method: 'GET', //请求方式\n        url: '', //发送请求的地址\n        data: '', //发送数据\n        async: true, //是否异步\n        cache: true, //是否缓存\n        contentType: 'application/x-www-form-urlencoded', //http头信息\n        headers: {\n            'Content-type': 'application/x-www-form-urlencoded'\n        },\n        success: function() {},\n        error: function() {},\n    };\n\n    //2.覆盖参数\n    for (var key in opts) {\n        defaults[key] = opts[key];\n    };\n\n    if (typeof defaults.data === 'object') {\n        var str = '';\n        for (var key in defaults.data) {\n            str += key + '=' + defaults.data[key] + '&'\n        }\n        defaults.data = str.substring(0, str.length - 1);\n    };\n\n    defaults.method = defaults.method.toUpperCase();\n\n    defaults.cache = defaults.cache ? '' : '&' + new Date().getTime();\n\n\n    if (defaults.method === 'GET' && (defaults.data || defaults.cache)) {\n        defaults.url += '?' + defaults.data + defaults.cache;\n    };\n\n    var oXhr = new XMLHttpRequest();\n\n    oXhr.open(defaults.method, defaults.url, defaults.async);\n\n    if (defaults.method === 'GET') {\n        Object.keys(opts.headers).forEach((key) => {\n            oXhr.setRequestHeader(key, opts.headers[key]);\n        });\n        oXhr.send(null);\n    } else {\n        //设置请求头\n        Object.keys(opts.headers).forEach((key) => {\n            oXhr.setRequestHeader(key, opts.headers[key]);\n        });\n        //OXhr.withCredentials = true;\n        oXhr.send(defaults.data);\n    }\n\n    oXhr.onreadystatechange = function() {\n        if (oXhr.readyState === 4) {\n            if (oXhr.status === 200) {\n                defaults.success.call(oXhr, oXhr.responseText); //oXhr.responseText\n            } else {\n                defaults.error();\n            };\n        };\n    };\n\n};\n\n\nmodule.exports = ajax;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React, {\n    Component\n} from 'react';\nimport './home.css';\nimport ajax from '../ajax.js';\n\n\n\nclass Home extends Component {\n    constructor() {\n        super();\n        this.state = {\n            data: ''\n        }\n    }\n    componentWillMount() {\n        ajax.bind(this)({\n            url: 'BranchesTrees.json',\n            method: 'GET',\n            async: true,\n            headers: {\n                \"Content-type\": 'application/json'\n            },\n            //header: 'application/json',\n            success: (data) => {\n                //unescape(str.replace(/\\U/g, '%u'))\n                this.setState({\n                    //data: JSON.parse(data)\n                })\n            },\n            error: (err) => {\n                console.log(err);\n            }\n        })\n\n    }\n    render() {\n        console.log(this.state.data[0])\n        return (\n            <div className=\"home\">\n                <Btn name=\"区县系统\" class=\"btn one\" data={this.state.data[0]} />\n                <Btn name=\"高校系统\" class=\"btn two\" data={this.state.data[1]} />\n                <Btn name=\"城市系统\" class=\"btn three\" data={this.state.data[2]} />\n            </div>\n        );\n    }\n}\n\nclass Btn extends Component {\n    render() {\n        return (\n            <div className={this.props.class} \n            onClick={() => {\n                localStorage.setItem('system', this.props.name);\n                localStorage.setItem('selectData', this.props.data);\n                console.log(this.props.data)\n                window.location.hash = 'choose';\n            }}>\n                {this.props.name}\n            </div>\n        )\n    }\n}\n\nexport default Home;","import React, {\n    Component\n} from 'react';\nimport './choose.css';\n\nimport ajax from '../ajax.js';\n\nlet aa = true;\n\n// let ajaxs = (opinion) => {\n//     let opt = opinion;\n//     let ajax = new XMLHttpRequest();\n//     ajax.onreadystatechange = function() {\n//         if (ajax.readyState === 4 && ajax.status === 200) {\n//             var response = ajax.responseText;\n//             opt.success(response);\n//         }\n//     };\n//     ajax.open(opt.method, opt.url, opt.async);\n//     ajax.setRequestHeader(\"Content-type\", opt.header);\n//     ajax.send(opt.data);\n// }\n\n//// \"proxy\": \"http://193.112.183.206\"\n//193.112.183.206/BranchesTrees.json\nclass Choose extends Component {\n    constructor() {\n        super();\n\n        // ajax({\n        //     url: 'BranchesTrees.json',\n        //     method: 'GET',\n        //     async: true,\n        //     headers: {\n        //         \"Content-type\": 'application/json'\n        //     },\n        //     //header: 'application/json',\n        //     success: (data) => {\n        //         //unescape(str.replace(/\\U/g, '%u'))\n        //         console.log(JSON.parse(data))\n        //     },\n        //     error: (err) => {\n        //         console.log(err);\n        //     }\n        // })\n        this.state = {\n            coverStyle: {\n                display: 'none'\n            }\n        }\n\n        this.systemName = localStorage.getItem('system');\n        if (!this.systemName) {\n            this.systemName = '区县系统'\n        }\n\n        this.setCoverStyle = this.setCoverStyle.bind(this);\n\n    }\n    setCoverStyle() {\n        if (!aa) {\n            return false;\n        }\n        if (this.state.coverStyle.display === 'none') {\n            this.setState({\n                coverStyle: {\n                    display: 'block'\n                }\n            })\n        } else {\n            this.setState({\n                coverStyle: {\n                    display: 'none'\n                }\n            })\n        }\n    }\n    render() {\n        //console.log(localStorage.getItem('selectData'))\n        //localStorage.getItem('selectData').mechanisms.\n        return (\n            <div id=\"choose\">\n                <div className=\"systemName\">{this.systemName}</div>\n                <DropBox classname=\"dropWrapper firstBox\" \n                data={['haha1', '233', 'wawawa', '林克']} />\n                <DropBox classname=\"dropWrapper secondBox\" \n                data={['haha1', '233', 'wawawa', '林克']} />\n                <DropBox classname=\"dropWrapper thirdBox\" \n                data={['haha1', '233', 'wawawa', '林克']} />\n                <NextBtn setCoverStyle={this.setCoverStyle} />\n\n                <BulletBox style={this.state.coverStyle}\n                setCoverStyle={this.setCoverStyle} />\n            </div>)\n    }\n}\n\nclass DropBox extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            showList: false,\n            height: '7vw',\n            selected: this.props.data[0],\n            moveFlag: false,\n            zIndex: 1\n        }\n        this.touchStartTime = null;\n        this.show = this.show.bind(this);\n        this.touchStart = this.touchStart.bind(this);\n        this.setSelected = this.setSelected.bind(this);\n    }\n    touchStart() {\n        this.touchStartTime = Date.parse(new Date());\n        this.setState({\n            zIndex: 9999\n        })\n    }\n    show() {\n        let timeDifference = Date.parse(new Date()) - this.touchStartTime;\n        if (timeDifference > 40) {\n            return false;\n        }\n        if (!this.state.showList && !this.state.moveFlag) {\n            aa = false;\n            let dataLength = this.props.data.length;\n            if (dataLength <= 3) {\n                this.setState({\n                    height: dataLength * 7 + 'vw',\n                    showList: true\n                })\n                aa = false;\n            } else {\n                this.setState({\n                    height: '21vw',\n                    showList: true\n                })\n                aa = false\n            }\n        } else if (this.state.showList && !this.state.moveFlag) {\n            this.setState({\n                height: '7vw',\n                showList: false,\n                zIndex: 1\n            });\n            setTimeout(function() {\n                aa = true;\n            }, 600)\n        }\n        console.log(aa)\n    }\n    setSelected(value) {\n        this.setState({\n            selected: value\n        })\n    }\n    render() {\n        let showContent = null;\n        if (!this.state.showList) {\n            showContent = this.state.selected;\n        } else {\n            showContent = <SelectInput classname=\"selectInput\" \n            childSelect={this.props.data}\n            setSelected={this.setSelected} />\n        }\n        return (\n            <div className={this.props.classname} \n            style={{height: this.state.height,\n                zIndex: this.state.zIndex}} \n            onTouchEnd={this.show}\n            onTouchStart={this.touchStart} >\n                {showContent}\n            </div>\n        )\n    }\n}\n\nclass SelectInput extends Component {\n    constructor(props) {\n        super(props);\n        this.childSelect = this.props.childSelect;\n        this.state = {\n            selected: this.childSelect[0],\n            backgroundColor: 'rgb(248, 248, 229)'\n        }\n\n    }\n\n    render() {\n        let valueArr = this.childSelect.map((value, index) => {\n            return (\n                <ValueBox value={value} key={index}\n                setSelected={this.props.setSelected} />\n            )\n        })\n        return (\n            <div className={this.props.classname}>\n                {valueArr}\n            </div>)\n    }\n}\n\nclass ValueBox extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            backgroundColor: 'rgb(248, 248, 229)'\n        }\n\n        this.touchStart = this.touchStart.bind(this);\n        this.onTouchEnd = this.onTouchEnd.bind(this);\n    }\n    touchStart(e) {\n        this.setState({\n            backgroundColor: 'lightblue'\n        })\n    }\n    onTouchEnd(e) {\n        this.setState({\n            backgroundColor: 'rgb(248, 248, 229)'\n        })\n        this.props.setSelected(this.props.value);\n    }\n    render() {\n        return (\n            <div className=\"valueBox\" \n            style={{background: this.state.backgroundColor}} \n            onTouchStart={this.touchStart}\n            onTouchEnd={this.onTouchEnd} >\n                    {this.props.value}\n            </div>\n        )\n    }\n}\n\nclass NextBtn extends Component {\n    render() {\n        return (\n            <div className=\"nextBtn\" onClick={this.props.setCoverStyle}>下一步</div>\n        )\n    }\n}\n\nclass BulletBox extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            name: '',\n            age: '',\n            job: ''\n        }\n        this.getName = this.getName.bind(this);\n        this.getAge = this.getAge.bind(this);\n        this.getJob = this.getJob.bind(this);\n        this.submitData = this.submitData.bind(this);\n    }\n    getName(e) {\n        this.setState({\n            name: e.target.value\n        })\n    }\n    getAge(e) {\n        this.setState({\n            age: e.target.value\n        })\n    }\n    getJob(e) {\n        this.setState({\n            job: e.target.value\n        })\n    }\n    submitData() {\n        console.log(this.state.name);\n        this.props.setCoverStyle()\n\n    }\n    render() {\n        return (\n            <div className=\"cover\" style={this.props.style}>\n                <div className=\"bullet\">\n                    <div className=\"cancel\" \n                        onTouchEnd={this.props.setCoverStyle}>\n                    </div>\n                    <div className=\"nameWrapper\">\n                        <p>姓名：</p>\n                        <input type=\"text\" \n                            className=\"name\" \n                            value={this.state.name}\n                            onChange={this.getName} />\n                    </div>\n                    <div className=\"nameWrapper\">\n                        <p>年龄：</p>\n                        <input type=\"text\" \n                            className=\"name\" \n                            value={this.state.age}\n                            onChange={this.getAge} />\n                    </div>\n                    <div className=\"nameWrapper\">\n                        <p>职业：</p>\n                        <input type=\"text\" \n                            className=\"name\" \n                            value={this.state.job}\n                            onChange={this.getJob} />\n                    </div>\n                    <div className=\"submit\" onTouchEnd={this.submitData}>提交</div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Choose;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport {\n    HashRouter as Router,\n    Route,\n    Switch\n} from 'react-router-dom';\n\nimport Home from './indexPage/home.js';\nimport Choose from './choose/choose.js';\n\nReactDOM.render(<Router basename=\"\">\n        <Switch>\n            <Route exact path=\"/choose\" component={Choose} />\n            <Route path=\"/\" component={Home} />\n        </Switch>\n    </Router>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}