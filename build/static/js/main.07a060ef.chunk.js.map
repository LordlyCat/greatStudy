{"version":3,"sources":["ajax.js","serviceWorker.js","indexPage/home.js","choose/choose.js","index.js"],"names":["module","exports","opts","defaults","method","url","data","async","cache","contentType","headers","Content-type","success","error","key","str","substring","length","toUpperCase","Date","getTime","oXhr","XMLHttpRequest","open","Object","keys","forEach","setRequestHeader","send","onreadystatechange","readyState","status","call","responseText","Boolean","window","location","hostname","match","Home","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","state","_this2","ajax","bind","console","log","JSON","parse","setState","err","react_default","a","createElement","className","home_Btn","name","class","Component","Btn","_this3","props","onClick","localStorage","setItem","stringify","hash","aa","userData","category_name","getItem","mechanism_name","branches_name","branch_node_name","age","job","resetFlag","Choose","branchesKey","coverStyle","display","systemName","setCoverStyle","assertThisInitialized","setBranchesKey","alert","undefined","id","mechanisms","map","element","branches","choose_DropBox","classname","initialization","choose_NextBtn","choose_BulletBox","style","DropBox","showList","height","selected","moveFlag","zIndex","touchStartTime","show","touchStart","setSelected","setTimeout","dataLength","value","showContent","choose_SelectInput","childSelect","onTouchEnd","onTouchStart","SelectInput","backgroundColor","_this4","valueArr","index","choose_ValueBox","myKey","ValueBox","_this5","e","background","NextBtn","BulletBox","_this6","tzb","getName","getAge","getJob","getTzb","submitData","target","replace","href","type","onChange","ReactDOM","render","HashRouter","basename","Switch","Route","exact","path","component","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.07a060ef.chunk.js","sourcesContent":["function ajax(opts) {\n\n    var defaults = {\n        method: 'GET', //请求方式\n        url: '', //发送请求的地址\n        data: '', //发送数据\n        async: true, //是否异步\n        cache: true, //是否缓存\n        contentType: 'application/x-www-form-urlencoded', //http头信息\n        headers: {\n            'Content-type': 'application/x-www-form-urlencoded'\n        },\n        success: function() {},\n        error: function() {},\n    };\n\n    //2.覆盖参数\n    for (var key in opts) {\n        defaults[key] = opts[key];\n    };\n\n    if (typeof defaults.data === 'object') {\n        var str = '';\n        for (var key in defaults.data) {\n            str += key + '=' + defaults.data[key] + '&'\n        }\n        defaults.data = str.substring(0, str.length - 1);\n    };\n\n    defaults.method = defaults.method.toUpperCase();\n\n    defaults.cache = defaults.cache ? '' : '&' + new Date().getTime();\n\n\n    if (defaults.method === 'GET' && (defaults.data || defaults.cache)) {\n        defaults.url += '?' + defaults.data + defaults.cache;\n    };\n\n    var oXhr = new XMLHttpRequest();\n\n    oXhr.open(defaults.method, defaults.url, defaults.async);\n\n    if (defaults.method === 'GET') {\n        Object.keys(opts.headers).forEach((key) => {\n            oXhr.setRequestHeader(key, opts.headers[key]);\n        });\n        oXhr.send(null);\n    } else {\n        //设置请求头\n        Object.keys(opts.headers).forEach((key) => {\n            oXhr.setRequestHeader(key, opts.headers[key]);\n        });\n        //OXhr.withCredentials = true;\n        oXhr.send(defaults.data);\n    }\n\n    oXhr.onreadystatechange = function() {\n        if (oXhr.readyState === 4) {\n            if (oXhr.status === 200) {\n                defaults.success.call(oXhr, oXhr.responseText); //oXhr.responseText\n            } else {\n                defaults.error();\n            };\n        };\n    };\n\n};\n\n\nmodule.exports = ajax;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React, {\n    Component\n} from 'react';\nimport './home.css';\nimport ajax from '../ajax.js';\n\n\n\nclass Home extends Component {\n    constructor() {\n        super();\n        this.state = {\n            data: ''\n        }\n    }\n    componentWillMount() {\n        ajax.bind(this)({\n            url: '/BranchesTrees.json',\n            method: 'GET',\n            async: true,\n            headers: {\n                \"Content-type\": 'application/json'\n            },\n            //header: 'application/json',\n            success: (data) => {\n                console.log(JSON.parse(data));\n                this.setState({\n                    data: JSON.parse(data)\n                })\n            },\n            error: (err) => {\n                console.log(err);\n            }\n        })\n\n    }\n    render() {\n        console.log(this.state.data[0])\n        return (\n            <div className=\"home\">\n                <Btn name=\"区县系统\" class=\"btn one\" data={this.state.data[0]} />\n                <Btn name=\"高校系统\" class=\"btn two\" data={this.state.data[1]} />\n                <Btn name=\"城市系统\" class=\"btn three\" data={this.state.data[2]} />\n            </div>\n        );\n    }\n}\n\nclass Btn extends Component {\n    render() {\n        return (\n            <div className={this.props.class} \n            onClick={() => {\n                localStorage.setItem('system', this.props.name);\n                localStorage.setItem('selectData', JSON.stringify(this.props.data));\n                window.location.hash = 'choose';\n                console.log(this.props.data)\n            }}>\n                {this.props.name}\n            </div>\n        )\n    }\n}\n\nexport default Home;","import React, {\n    Component\n} from 'react';\nimport './choose.css';\n\nimport ajax from '../ajax.js';\n\nlet aa = true;\nlet userData = {\n    category_name: localStorage.getItem('system'),\n    mechanism_name: '',\n    branches_name: '',\n    branch_node_name: '',\n    name: '',\n    age: '',\n    job: ''\n}\n\nlet resetFlag = false;\n\nlet selectedIndex = null;\n// let ajaxs = (opinion) => {\n//     let opt = opinion;\n//     let ajax = new XMLHttpRequest();\n//     ajax.onreadystatechange = function() {\n//         if (ajax.readyState === 4 && ajax.status === 200) {\n//             var response = ajax.responseText;\n//             opt.success(response);\n//         }\n//     };\n//     ajax.open(opt.method, opt.url, opt.async);\n//     ajax.setRequestHeader(\"Content-type\", opt.header);\n//     ajax.send(opt.data);\n// }\n\n//// \"proxy\": \"http://193.112.183.206\"\n//193.112.183.206/BranchesTrees.json\nclass Choose extends Component {\n    constructor() {\n        super();\n\n        // ajax({\n        //     url: 'BranchesTrees.json',\n        //     method: 'GET',\n        //     async: true,\n        //     headers: {\n        //         \"Content-type\": 'application/json'\n        //     },\n        //     //header: 'application/json',\n        //     success: (data) => {\n        //         //unescape(str.replace(/\\U/g, '%u'))\n        //         console.log(JSON.parse(data))\n        //     },\n        //     error: (err) => {\n        //         console.log(err);\n        //     }\n        // })\n        this.state = {\n            data: this.props,\n            branchesKey: 0,\n            coverStyle: {\n                display: 'none'\n            }\n        }\n\n        this.systemName = localStorage.getItem('system');\n        if (!this.systemName) {\n            this.systemName = '区县系统'\n        }\n\n        this.setCoverStyle = this.setCoverStyle.bind(this);\n        this.setBranchesKey = this.setBranchesKey.bind(this);\n    }\n    setCoverStyle() {\n        console.log(aa);\n        if (!aa) {\n            return false;\n        }\n        if (this.state.coverStyle.display === 'none') {\n            if (userData.mechanism_name === '' ||\n                userData.branches_name === '') {\n                alert(\"请选择完毕信息\")\n                return false;\n            }\n            this.setState({\n                coverStyle: {\n                    display: 'block'\n                }\n            })\n            console.log(userData)\n        } else {\n            this.setState({\n                coverStyle: {\n                    display: 'none'\n                }\n            })\n        }\n    }\n    setBranchesKey(key) {\n        resetFlag = true;\n        userData.branches_name = '';\n        this.setState({\n            branchesKey: key\n        }, () => {\n            console.log('key:', key)\n        })\n    }\n    render() {\n        //console.log(localStorage.getItem('selectData'))\n        let data = JSON.parse(localStorage.getItem('selectData'));\n        //console.log('data', data)\n        if (data == undefined) {\n            return (\n                <div id=\"choose\">\n                <div className=\"systemName\">{this.systemName}</div>\n                    <h3>网络延迟，数据加载错误，请返回上一页或入口重试</h3>\n                </div>\n            )\n        }\n        \n        let newData = {};\n        \n        let mechanisms = data.mechanisms.map(element => element.mechanism_name);\n        let branches_name = data.mechanisms[this.state.branchesKey].branches.map(element => element.branches_name)\n\n        return (\n            <div id=\"choose\">\n                <div className=\"systemName\">{this.systemName}</div>\n                <DropBox classname=\"dropWrapper firstBox\" \n                data={mechanisms}\n                initialization='--直属团组织--' \n                setBranchesKey={this.setBranchesKey}/>\n                <DropBox classname=\"dropWrapper secondBox\" \n                data={branches_name}\n                initialization=\"请选择\" />\n                <NextBtn setCoverStyle={this.setCoverStyle} />\n\n                <BulletBox style={this.state.coverStyle}\n                setCoverStyle={this.setCoverStyle} />\n            </div>)\n    }\n}\n\nclass DropBox extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            showList: false,\n            height: '7vw',\n            selected: this.props.initialization,\n            initialization: this.props.initialization,\n            moveFlag: false,\n            zIndex: 1,\n            branchesKey: null\n        }\n\n        this.branchesKey = [];\n        this.touchStartTime = null;\n        this.show = this.show.bind(this);\n        this.touchStart = this.touchStart.bind(this);\n        this.setSelected = this.setSelected.bind(this);\n    }\n    touchStart() {\n        this.touchStartTime = Date.parse(new Date());\n        this.setState({\n            zIndex: 9999\n        })\n    }\n    show() {\n        let timeDifference = Date.parse(new Date()) - this.touchStartTime;\n        if (timeDifference > 40) {\n            return false;\n        }\n        if (!this.state.showList && !this.state.moveFlag) {\n            aa = false;\n            let dataLength = this.props.data.length;\n            if (dataLength <= 3) {\n                this.setState({\n                    height: dataLength * 7 + 'vw',\n                    showList: true\n                })\n                aa = false;\n            } else {\n                this.setState({\n                    height: '21vw',\n                    showList: true\n                })\n                aa = false\n            }\n        } else if (this.state.showList && !this.state.moveFlag) {\n            this.setState({\n                height: '7vw',\n                showList: false,\n                zIndex: 1\n            });\n            if (this.state.initialization === '--直属团组织--') {\n                this.setState({\n                    branchesKey: userData.mechanism_name\n                })\n            }\n            setTimeout(function() {\n                aa = true;\n            }, 600)\n        }\n    }\n    setSelected(value) {\n        this.setState({\n            selected: value\n        })\n    }\n    render() {\n        let showContent = null;\n        if (!this.state.showList) {\n            if (this.state.selected === this.state.initialization) {\n                showContent = this.state.initialization;\n            } else {\n                showContent = this.state.selected;\n                if (this.state.initialization === '请选择') {\n                    if (resetFlag) {\n                        showContent = this.state.initialization;\n                        resetFlag = !resetFlag;\n                    } else {\n                        userData.branches_name = showContent;\n                    }\n                    \n                } else {\n                    userData.mechanism_name = showContent;\n                }\n            }\n\n        } else {\n            console.log(this.props.data)\n            if (this.props.data.length && this.props.data.length === 1) {\n                showContent = this.props.data[0];\n                if (this.state.initialization === '请选择') {\n                    userData.branches_name = showContent;\n                } else {\n                    userData.mechanism_name = showContent;\n                }\n                aa = true;\n                console.log('haha')\n            } else {\n                console.log('es')\n                showContent = <SelectInput classname=\"selectInput\" \n                childSelect={this.props.data}\n                setSelected={this.setSelected} \n                setBranchesKey={this.props.setBranchesKey}/>\n            }\n            \n        }\n        return (\n            <div className={this.props.classname} \n            style={{height: this.state.height,\n                zIndex: this.state.zIndex}} \n            onTouchEnd={this.show}\n            onTouchStart={this.touchStart} >\n                {showContent}\n            </div>\n        )\n    }\n}\n\nclass SelectInput extends Component {\n    constructor(props) {\n        super(props);\n        this.childSelect = this.props.childSelect;\n        this.state = {\n            selected: this.childSelect[0],\n            backgroundColor: 'rgb(248, 248, 229)'\n        }\n\n    }\n\n    render() {\n        let valueArr = this.childSelect.map((value, index) => {\n            //console.log(index);\n            return (\n                <ValueBox value={value} \n                myKey={index} \n                key={index}\n                setSelected={this.props.setSelected} \n                setBranchesKey={this.props.setBranchesKey} />\n            )\n        })\n        return (\n            <div className={this.props.classname}>\n                {valueArr}\n            </div>)\n    }\n}\n\nclass ValueBox extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            backgroundColor: 'rgb(248, 248, 229)'\n        }\n\n        this.touchStart = this.touchStart.bind(this);\n        this.onTouchEnd = this.onTouchEnd.bind(this);\n    }\n    touchStart(e) {\n        this.setState({\n            backgroundColor: 'lightblue'\n        })\n    }\n    onTouchEnd(e) {\n        this.setState({\n            backgroundColor: 'rgb(248, 248, 229)'\n        })\n        this.props.setSelected(this.props.value);\n        if (this.props.setBranchesKey) {this.props.setBranchesKey(this.props.myKey)}\n    }\n    render() {\n        return (\n            <div className=\"valueBox\" \n            style={{background: this.state.backgroundColor}} \n            onTouchStart={this.touchStart}\n            onTouchEnd={this.onTouchEnd} >\n                    {this.props.value}\n            </div>\n        )\n    }\n}\n\nclass NextBtn extends Component {\n    render() {\n        return (\n            <div className=\"nextBtn\" onClick={this.props.setCoverStyle}>下一步</div>\n        )\n    }\n}\n\nclass BulletBox extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            name: '',\n            age: '',\n            job: '',\n            tzb: ''\n        }\n        this.getName = this.getName.bind(this);\n        this.getAge = this.getAge.bind(this);\n        this.getJob = this.getJob.bind(this);\n        this.getTzb = this.getTzb.bind(this);\n        this.submitData = this.submitData.bind(this);\n    }\n    getName(e) {\n        this.setState({\n            name: e.target.value\n        })\n        userData.name = e.target.value;\n    }\n    getAge(e) {\n        this.setState({\n            age: e.target.value\n        })\n        userData.age = e.target.value\n    }\n    getJob(e) {\n        this.setState({\n            job: e.target.value\n        })\n        userData.job = e.target.value\n    }\n    getTzb(e) {\n        this.setState({\n            tzb: e.target.value\n        })\n        userData.branch_node_name = e.target.value;\n    }\n    submitData() {\n        userData.category_name = localStorage.getItem('system');\n        console.log(userData);\n        for (var value in userData) {\n            \n            if (userData[value].length === 0 || userData[value].replace(/(^[ \\t\\n\\r]*)|([ \\t\\n\\r]*$)/g, '').length == 0) {\n                alert('填写内容不能为空')\n                return false;\n            }\n            //console.log(userData[value]);\n        }\n        this.props.setCoverStyle()\n        ajax.call(this, {\n            url: '/admin/youth/uploadUserInfo',\n            method: 'POST',\n            async: true,\n            data: userData,\n            headers: {\n                \"Content-type\": 'application/x-www-form-urlencoded'\n            },\n            //header: 'application/json',\n            success: (data) => {\n                console.log('upload:', userData);\n                alert('提交成功');\n                window.location.href = 'http://test.shingdstar.com/admin/youth/cyol';\n            },\n            error: (err) => {\n                alert(err)\n                console.log(err);\n            }\n        })\n    }\n    render() {\n        return (\n            <div className=\"cover\" style={this.props.style}>\n                <div className=\"bullet\">\n                    <div className=\"cancel\" \n                        onTouchEnd={this.props.setCoverStyle}>\n                    </div>\n                    <div className=\"nameWrapper\">\n                        <p>姓名：</p>\n                        <input type=\"text\" \n                            className=\"name\" \n                            value={this.state.name}\n                            onChange={this.getName} />\n                    </div>\n                    <div className=\"nameWrapper\">\n                        <p>年龄：</p>\n                        <input type=\"text\" \n                            className=\"name\" \n                            value={this.state.age}\n                            onChange={this.getAge} />\n                    </div>\n                    <div className=\"nameWrapper\">\n                        <p>职业：</p>\n                        <input type=\"text\" \n                            className=\"name\" \n                            value={this.state.job}\n                            onChange={this.getJob} />\n                    </div>\n                    <div className=\"nameWrapper\">\n                        <p>团支部：</p>\n                        <input type=\"text\" \n                            className=\"name\" \n                            value={this.state.tzb}\n                            onChange={this.getTzb} />\n                    </div>\n                    <div className=\"submit\" onTouchEnd={this.submitData}>提交</div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Choose;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport {\n    HashRouter as Router,\n    Route,\n    Switch\n} from 'react-router-dom';\n\nimport Home from './indexPage/home.js';\nimport Choose from './choose/choose.js';\n\nReactDOM.render(<Router basename=\"\">\n        <Switch>\n            <Route exact path=\"/choose\" component={Choose} />\n            <Route path=\"/\" component={Home} />\n        </Switch>\n    </Router>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}